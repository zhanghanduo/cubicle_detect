<?xml version="1.0" encoding="utf-8"?>

<launch>
  <!-- Config and weights folder. -->
  <arg name="source_frame"                            value="world"/>
  <arg name="robot_frame"                             value="camera"/>
  <arg name="publish_obstacle"                        value="/mapObs"/>
  <arg name="road_slope_vis"                          value="true"/>
  <arg name="yolo_weights_path"          default="$(find cubicle_detect)/yolo_network_config/weights"/>
  <arg name="yolo_config_path"           default="$(find cubicle_detect)/yolo_network_config/cfg"/>
  <arg name="seg_param_path"             default="$(find cubicle_detect)/config/params.yml"/>
  <arg name="min_disparity"              default="7"/>
  <arg name="disparity_scope"            default="128"/>

  <param name="use_sim_time" value="true" />

  <!--  Localization-->
  <include file="$(find ugv_slam)/launch/bus_core.launch" />
  <!--  <include file="$(find sslam_estimator)/launch/bus_global_core.launch" />-->
  <include file="$(find undistort_images)/launch/bus.launch" />
  <!--  <include file="$(find lane_detector)/launch/lanenet.launch" />-->

  <!--   Start darknet and ros wrapper-->
  <node pkg="cubicle_detect" type="cubicle_detect" name="cubicle_detect_bus" output="screen" >
    <!--whether use one-channel as input-->
    <rosparam command="load"            file="$(find cubicle_detect)/config/cv.yaml"/>
    <rosparam command="load"            file="$(find cubicle_detect)/config/yolov3-spp.yaml"/>
    <param name="use_grey"              value="false" />
    <param name="weights_path"          value="$(arg yolo_weights_path)" />
    <param name="config_path"           value="$(arg yolo_config_path)" />
    <param name="min_disparity"         value="$(arg min_disparity)" />
    <param name="disparity_scope"       value="$(arg disparity_scope)" />
    <param name="image_left_topic"      value="/left/image_rect" />
    <param name="image_right_topic"     value="/right/image_rect" />
    <param name="image_info_left"       value="/left/camera_info" />
    <param name="image_info_right"      value="/right/camera_info" />
    <param name="filter_dynamic"        value="true" />
    <param name="scale"                 value="1" />
    <param name="enable_stereo"         value="true" />
    <param name="enable_classification" value="true" />
    <param name="enable_neg"            value="false" />
    <param name="seg_path"              value="$(arg seg_param_path)" />
  </node>

  <!--  <node pkg="octomap_world" type="octomap_manager" name="octomap_publisher" output="screen" >-->
  <!--    <param name="tf_frame"                type="string"     value="$(arg source_frame)" />-->
  <!--    <param name="resolution"              value="0.5" />-->
  <!--    <param name="sensor_max_range"        value="40.0" />-->
  <!--    <param name="local_max"               value="100" />-->
  <!--    <param name="map_publish_frequency"   type="double"     value="1.0"/>-->
  <!--    <remap from="disparity"               to="/obs_disparity_map" />-->
  <!--    &lt;!&ndash; <remap from="pointcloud"              to="/obs_points" />&ndash;&gt;-->
  <!--    &lt;!&ndash; <remap from="pointcloud"              to="/velodyne_points" />&ndash;&gt;-->
  <!--    <remap from="cam0/camera_info"        to="/left/camera_info" />-->
  <!--    <remap from="cam1/camera_info"        to="/right/camera_info" />-->
  <!--  </node>-->

  <!--  <node pkg="cmerge" type="cmerge_node" name="cubicle_merge_bus" output="screen">-->
  <!--      <param name="source_frame"                      value="$(arg source_frame)" />-->
  <!--      <param name="base_frame"                        value="$(arg robot_frame)" />-->
  <!--      <param name="input_type"                        value="2" />-->
  <!--      <param name="smooth_value"                      value="0.7" />-->
  <!--      <param name="obstacle/map"                      value="/obs_map" />-->
  <!--      <param name="road_slope_vis"                    value="$(arg road_slope_vis)" />-->
  <!--      <param name="publish/map"                       value="$(arg publish_obstacle)" />-->
  <!--  </node>-->

  <!--  <node pkg="curbDetection" type="curbDetection_node" name="curbDetection_node" output="screen">-->
  <!--    &lt;!&ndash;        <param name="config_path"     value="$(arg config_path)" />&ndash;&gt;-->
  <!--  </node>-->

  <!--  <node pkg="multi_lanedetection" type="multi_lanedetection_node" name="lanedetection_node" output="screen">-->
  <!--    <param name="make_offline_video"            value="false"/>-->
  <!--    <param name="leftRectTopic"                 value="/left/image_rect" />-->
  <!--    <param name="/publishers/lane_img/topic"    value="/lane_detection_img"/>-->
  <!--  </node>-->

<!--  <node name="rvizvisualisation" pkg="rviz" type="rviz" output="log" args="-d $(find sslam_estimator)/config/sslam_rviz_config.rviz" />-->
  <!--  <node name="rvizvisualisation" pkg="rviz" type="rviz" output="log" args="-d $(find cubicle_detect)/config/demo.rviz" />-->

  <!--<node name="republish" type="republish" pkg="image_transport" output="screen" 	args="compressed in:=/front_camera/image_raw raw out:=/camera/image_raw" /> -->
</launch>
